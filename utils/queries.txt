[GET] http://localhost:3000/api/providers Retorna un objeto con los datos de todos los providers. Retorna un status 200.
[POST] http://localhost:3000/api/providers Se envía en el body los datos del proveedor a crear y retorna un status 201. Payload {message: "proveedor creado", provider:{datos_del_proveedor_creado}}.
[PUT] http://localhost:3000/api/providers Se envía en el body los datos del proveedor a editar y retorna un status 200. Payload {message: "proveedor actualizado: Adidas", provider:{datos_del_proveedor_editado}}.
[DELETE] http://localhost:3000/api/providers Se envía en el body el título del proveedor a borrar y retorna un status 200. Payload {message: "Se ha borrado el proveedor: Nintendo"}.
CRUD Products
[GET] http://localhost:3000/api/products Retorna un objeto con los datos de todos los productos. Retorna un status 200. Usar populate() para que traiga los datos del proveedor de cada producto.
[POST] http://localhost:3000/api/products Se envía en el body los datos del producto a crear y retorna un status 201. Payload {message: "producto creado",product:{datos_del_producto_creado}. Primero tendréis que traer los datos del proveedor para obtener el ID_provider. Después se podrá crear el producto.
[PUT] http://localhost:3000/api/products Se envía en el body los datos del producto a editar y retorna un status 200. Actualiza los datos de un producto. Payload {message: "producto actualizado: zapatos", product:{datos_del_producto_editado}}
[DELETE] http://localhost:3000/api/products Se envía en el body el título del producto a borrar y retorna un status 200. Payload {message: "Se ha borrado el producto: zapatos".